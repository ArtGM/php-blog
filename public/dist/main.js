/*! For license information please see main.js.LICENSE.txt */
!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./assets/js/main.js")}({"./assets/js/ajax.js":function(e,t,n){"use strict";n.r(t);const o={create:function(e){const t=new XMLHttpRequest,n=new FormData(e.form);t.onerror=()=>{alert(e.fail)},t.onload=()=>{alert(e.success),e.form.reset()},t.open(e.method,e.url),t.send(n)},update:function(e){const t=new XMLHttpRequest,n=new FormData(e.form);t.onerror=()=>{alert(e.fail)},t.onload=()=>{alert(e.success),location.reload()},t.open(e.method,e.url),t.send(n)},delete:function(){alert("TODO: Create delete function")}};t.default=o},"./assets/js/main.js":function(e,t,n){"use strict";n.r(t);var o=n("./assets/js/ajax.js");window.onload=()=>{const e=function(e,t){e.form&&(e.form.onsubmit=n=>{n.preventDefault(),t(e)})},t={form:document.getElementById("create-post-form"),fail:"un problème et survenu",success:"Succés",method:"POST",url:"/newpost"},n={form:document.getElementById("comment-form"),fail:"un problème et survenu :(",success:"Commentaire envoyé, en attente de modération :)",method:"POST",url:"/newcomment"},r={form:document.getElementById("update-post-form"),fail:"un problème et survenu :(",success:"Article Mis à jour",method:"POST",url:"/updatepost"};e(t,o.default.create),e(n,o.default.create),e(r,o.default.update);Array.from(document.getElementsByClassName("delete-button")).map(e=>{e.onclick=()=>confirm("Voulez-vous supprimer ce post ainsi que tout ses commentaires? cette opération est irréversible")})}}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL2FqYXguanMiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL21haW4uanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJBamF4IiwiZGF0YSIsImh0dHBSZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiZm9ybSIsIm9uZXJyb3IiLCJhbGVydCIsImZhaWwiLCJvbmxvYWQiLCJzdWNjZXNzIiwicmVzZXQiLCJvcGVuIiwibWV0aG9kIiwidXJsIiwic2VuZCIsInVwZGF0ZSIsImxvY2F0aW9uIiwicmVsb2FkIiwiZGVsZXRlIiwid2luZG93IiwiZG9BY3Rpb24iLCJjYWxsYmFjayIsIm9uc3VibWl0IiwiZXYiLCJwcmV2ZW50RGVmYXVsdCIsIm5ld1Bvc3QiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwibmV3Q29tbWVudCIsInVwZGF0ZVBvc3QiLCJBcnJheSIsImZyb20iLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibWFwIiwiZSIsIm9uY2xpY2siLCJjb25maXJtIl0sIm1hcHBpbmdzIjoiO2FBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdB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QUFNLHlCQUNORSxRQUFTLFNBQ1RHLE9BQVEsT0FDUkMsSUFBSyxZQUdIZSxFQUFhLENBQ2Z4QixLQUFNc0IsU0FBU0MsZUFBZSxnQkFDOUJwQixLQUFNLDRCQUNORSxRQUFTLGtEQUNURyxPQUFRLE9BQ1JDLElBQUssZUFHSGdCLEVBQWEsQ0FDZnpCLEtBQU1zQixTQUFTQyxlQUFlLG9CQUM5QnBCLEtBQU0sNEJBQ05FLFFBQVMscUJBQ1RHLE9BQVEsT0FDUkMsSUFBSyxlQUdUTyxFQUFTSyxFQUFTM0IsVUFBS1YsUUFDdkJnQyxFQUFTUSxFQUFZOUIsVUFBS1YsUUFDMUJnQyxFQUFTUyxFQUFZL0IsVUFBS2lCLFFBRUxlLE1BQU1DLEtBQUtMLFNBQVNNLHVCQUF1QixrQkFFbkRDLElBQUlDLElBQ2JBLEVBQUVDLFFBQVUsSUFBTUMsUUFBUSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiLi9hc3NldHMvanMvbWFpbi5qc1wiKTtcbiIsImNvbnN0IEFqYXggPSB7XHJcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgY29uc3QgaHR0cFJlcXVlc3QgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKVxyXG4gICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGRhdGEuZm9ybSlcclxuXHJcbiAgICAgICAgaHR0cFJlcXVlc3Qub25lcnJvciA9ICgpID0+IHtcclxuICAgICAgICAgICAgYWxlcnQoZGF0YS5mYWlsKVxyXG4gICAgICAgIH1cclxuICAgICAgICBodHRwUmVxdWVzdC5vbmxvYWQgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGFsZXJ0KGRhdGEuc3VjY2VzcylcclxuICAgICAgICAgICAgZGF0YS5mb3JtLnJlc2V0KClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGh0dHBSZXF1ZXN0Lm9wZW4oZGF0YS5tZXRob2QsIGRhdGEudXJsKVxyXG4gICAgICAgIGh0dHBSZXF1ZXN0LnNlbmQoZm9ybURhdGEpXHJcbiAgICB9LFxyXG4gICAgdXBkYXRlOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgIGNvbnN0IGh0dHBSZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KClcclxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShkYXRhLmZvcm0pXHJcblxyXG4gICAgICAgIGh0dHBSZXF1ZXN0Lm9uZXJyb3IgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGFsZXJ0KGRhdGEuZmFpbClcclxuICAgICAgICB9XHJcbiAgICAgICAgaHR0cFJlcXVlc3Qub25sb2FkID0gKCkgPT4ge1xyXG4gICAgICAgICAgICBhbGVydChkYXRhLnN1Y2Nlc3MpXHJcblxyXG4gICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaHR0cFJlcXVlc3Qub3BlbihkYXRhLm1ldGhvZCwgZGF0YS51cmwpXHJcbiAgICAgICAgaHR0cFJlcXVlc3Quc2VuZChmb3JtRGF0YSlcclxuICAgIH0sXHJcbiAgICBkZWxldGU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBhbGVydCgnVE9ETzogQ3JlYXRlIGRlbGV0ZSBmdW5jdGlvbicpXHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEFqYXgiLCJpbXBvcnQgQWpheCBmcm9tICcuL2FqYXgnXHJcbi8vIFRPRE86IHNlcGFyYXRlIGZyb250ZW5kIGFuZCBiYWNrZW5kIGZpbGVcclxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcclxuXHJcbiAgICBjb25zdCBkb0FjdGlvbiA9IGZ1bmN0aW9uIChkYXRhLCBjYWxsYmFjaykge1xyXG4gICAgICAgIGlmIChkYXRhLmZvcm0pIHtcclxuICAgICAgICAgICAgZGF0YS5mb3JtLm9uc3VibWl0ID0gZXYgPT4ge1xyXG4gICAgICAgICAgICAgICAgZXYucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZGF0YSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBuZXdQb3N0ID0ge1xyXG4gICAgICAgIGZvcm06IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcmVhdGUtcG9zdC1mb3JtJyksXHJcbiAgICAgICAgZmFpbDogXCJ1biBwcm9ibMOobWUgZXQgc3VydmVudVwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IFwiU3VjY8Opc1wiLFxyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIHVybDogJy9uZXdwb3N0J1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IG5ld0NvbW1lbnQgPSB7XHJcbiAgICAgICAgZm9ybTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbW1lbnQtZm9ybScpLFxyXG4gICAgICAgIGZhaWw6IFwidW4gcHJvYmzDqG1lIGV0IHN1cnZlbnUgOihcIixcclxuICAgICAgICBzdWNjZXNzOiBcIkNvbW1lbnRhaXJlIGVudm95w6ksIGVuIGF0dGVudGUgZGUgbW9kw6lyYXRpb24gOilcIixcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICB1cmw6ICcvbmV3Y29tbWVudCdcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB1cGRhdGVQb3N0ID0ge1xyXG4gICAgICAgIGZvcm06IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1cGRhdGUtcG9zdC1mb3JtJyksXHJcbiAgICAgICAgZmFpbDogXCJ1biBwcm9ibMOobWUgZXQgc3VydmVudSA6KFwiLFxyXG4gICAgICAgIHN1Y2Nlc3M6IFwiQXJ0aWNsZSBNaXMgw6Agam91clwiLFxyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIHVybDogJy91cGRhdGVwb3N0J1xyXG4gICAgfVxyXG5cclxuICAgIGRvQWN0aW9uKG5ld1Bvc3QsIEFqYXguY3JlYXRlKVxyXG4gICAgZG9BY3Rpb24obmV3Q29tbWVudCwgQWpheC5jcmVhdGUpXHJcbiAgICBkb0FjdGlvbih1cGRhdGVQb3N0LCBBamF4LnVwZGF0ZSlcclxuXHJcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2RlbGV0ZS1idXR0b24nKSlcclxuXHJcbiAgICBkZWxldGVCdXR0b24ubWFwKGUgPT4ge1xyXG4gICAgICAgIGUub25jbGljayA9ICgpID0+IGNvbmZpcm0oJ1ZvdWxlei12b3VzIHN1cHByaW1lciBjZSBwb3N0IGFpbnNpIHF1ZSB0b3V0IHNlcyBjb21tZW50YWlyZXM/IGNldHRlIG9ww6lyYXRpb24gZXN0IGlycsOpdmVyc2libGUnKVxyXG4gICAgfSlcclxuXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ==